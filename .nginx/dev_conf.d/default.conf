# upstream auth {
#     server auth:5000; # server name is same as the service name used in docker-compose file
# # port on which the service is running...NOT the exposed port(the RHS port in docker-compose ports attr.)
# }
# upstream api {
#     server api:3000;
# }


server {
    listen 80;
    listen [::]:80;
    server_name _;
    root /var/www/html;
    index index.html;
    return 301 https://apiv2.zeeh.africa$request_uri;
}


server {
    resolver 127.0.0.11 valid=30s;
    
    root /var/www/html;
    index index.html;
    location /hello {
        allow all;
        root /var/www/html;
    }
    location /api {
        set $upstream http://api:3000/;
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass $upstream;
    }
    location /auth {
        set $upstream http://auth:5000/;
        rewrite ^/auth/(.*) /$1 break; # works for both /auth and /auth/
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; 
        proxy_pass $upstream;
    }

    location /insight {
        set $upstream http://insight:3003/;
        rewrite ^/insight/(.*) /$1 break; # works for both /insight and /insight/
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; 
        proxy_pass $upstream;
    }
}